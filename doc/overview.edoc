@author Guilherme Andrade <erlzord(at)gandrade(dot)net>
@copyright 2017 Guilherme Andrade
@version 1.0.0
@title erlzord
@doc `erlzord': N-dimensional Z-order curves for Erlang

<hr/>

`erlzord' is a straightforward Erlang implementation of the <a href="https://en.wikipedia.org/wiki/Z-order_curve">Z-order curve</a> function.

* Any number of dimensions is supported
* No limit on the bitsize of output values

The code was successfully tested on generations 17, 18 and 19 of Erlang/OTP; the test cases and their data
were automatically generated based on an existing <a href="https://github.com/LLNL/rubik/blob/master/rubik/zorder.py">Python Implementation</a>
from the <a href="https://github.com/LLNL/rubik">rubik</a> project.

== Examples ==
<pre lang="erlang">
Config = erlzord:config(0, 100), % Coordinate values between 0 and 100

% 1d points
erlzord:calculate({0},   Config), % 0
erlzord:calculate({50},  Config), % 50
erlzord:calculate({100}, Config), % 100

% 2d points
erlzord:calculate({0, 0},     Config), % 0
erlzord:calculate({50, 0},    Config), % 1284
erlzord:calculate({0, 100},   Config), % 15408
erlzord:calculate({100, 100}, Config), % 15408

% 3d points
erlzord:calculate({0, 0, 0},       Config), % 0
erlzord:calculate({50, 0, 0},      Config), % 36872
erlzord:calculate({0, 0, 100},     Config), % 1179904
erlzord:calculate({100, 100, 100}, Config), % 2064832

% 10d points
erlzord:calculate(
    {100, 100, 100, 100, 100, 100, 100, 
     100, 100, 100}, Config). % 1180590494818577154048
</pre>
